style! = "
: body,html {overflow: hidden}
: h3 {margin: var(--dwc-space-m) 0}
:
: .dwc-toolbar {
:    display: flex;
:    align-items: center;
:    gap: var(--dwc-space-m);
:    padding: 0 var(--dwc-space-m);
:    background-color: var(--dwc-color-primary);
:    color: var(--dwc-color-on-primary-text);
: }
:
: .dwc-logo {
:    display: flex;
:    align-items: center;
:    justify-content: center;
: }
:
: .dwc-logo img {
:    height: 24px;
: }
:
: .dwc-content {
:   max-width: 600px;
:   margin: 0 auto; 
: }
:    
: .dwc-card {
:    padding: var(--dwc-space-m);
:    margin: var(--dwc-space-m) 0;
:    border: thin solid var(--dwc-color-default);
:    border-radius: var(--dwc-border-radius-m);
:    background-color: var(--dwc-surface-3);
: }
:    
: @media (max-width: 600px) {  
:  dwc-tab::part(title) { 
:     display: none;
:   }    
: }
:"

use ::BBjAppLayout/BBjAppLayout.bbj::BBjAppLayout

web! = BBjAPI().getWebManager()
rem The app should include a viewport meta tag which contains `viewport-fit=cover`, like the following.
rem This causes the viewport to be scaled to fill the device display.
web!.setMeta("viewport", "width=device-width, initial-scale=1.0, viewport-fit=cover, user-scalable=no")
web!.injectStyle(style!, 0)

sysgui! =  BBjAPI().openSysGui("X0")
imageManager! = sysgui!.getImageManager()

wnd! = sysgui!.addWindow("BBjAppLayout", $01001000$)
wnd!.setCallback(BBjAPI.ON_CLOSE,"eoj")

app! = new BBjAppLayout(wnd!)
app!.setFooterReveal(1)
app!.setFooterShadow(BBjAppLayout.SHADOW_SCROLL)
app!.setDrawerPlacement(BBjAppLayout.DRAWER_PLACEMENT_HIDDEN)

rem Header
rem ==================
declare auto BBjChildWindow header!
header! = app!.getHeader()
toolbar! = header!.addChildWindow("", $00108800$, sysgui!.getAvailableContext())
toolbar!.addStyle("dwc-toolbar")
logo! = toolbar!.addImageCtrl(imageManager!.loadImageFromFile("./assets/logo.png"))
logo!.addStyle("dwc-logo")
toolbar!.addStaticText("<html><h3>DWC Application</h3></html>")

rem Footer
rem ==================
declare auto BBjChildWindow footer!
footer! = app!.getFooter()
footer!.addStyle("dwc-footer")

footerMenu! = footer!.addTabCtrl()
footerMenu!.setCallback(footerMenu!.ON_TAB_SELECT, "onPageChanged")
footerMenu!.setAttribute("nobody","true")
footerMenu!.setAttribute("borderless","true")
footerMenu!.setAttribute("placement","bottom")
footerMenu!.setAttribute("alignment","stretch")
footerMenu!.addTab("<dwc-icon expanse='s' name='dashboard'></dwc-icon>      <span part='title'>Dashboard</span>"    , -1)
footerMenu!.addTab("<dwc-icon expanse='s' name='shopping-cart'></dwc-icon>  <span part='title'>Orders</span>"       , -1)
footerMenu!.addTab("<dwc-icon expanse='s' name='users'></dwc-icon>          <span part='title'>Customers</span>"    , -1)
footerMenu!.addTab("<dwc-icon expanse='s' name='box'></dwc-icon>            <span part='title'>Products</span>"     , -1)
footerMenu!.addTab("<dwc-icon expanse='s' name='files'></dwc-icon>          <span part='title'>Documents</span>"    , -1)

rem Content
rem ==================
declare auto BBjChildWindow content!
content! = app!.getContent()
content!.addStyle("dwc-content")
pageHeader! = content!.addStaticText("<html><h1>Application Title</h1></html>")

lorem! = "
:Lorem Ipsum is simply dummy text of the printing and typesetting 
:industry. Lorem Ipsum has been the industry's standard dummy 
:text ever since the 1500s when an unknown printer took a galley 
:of type and scrambled it to make a type specimen book. It has 
:survived not only five centuries, but also the leap into electronic 
:typesetting, remaining essentially unchanged. It was popularised 
:in the 1960s with the release of Letraset sheets containing Lorem 
:Ipsum passages, and more recently with desktop publishing software
: like Aldus PageMaker including versions of Lorem Ipsum.
:"

for i=1 to 10
    card! = content!.addChildWindow("", $00108000$, sysgui!.getAvailableContext())
    card!.addStyle("dwc-card")
    cardTitle! = card!.addStaticText("<html><h2>What is Lorem Ipsum (" + str(i) +")?</h2></html>")
    cardContent! = card!.addStaticText("<html><p>" + lorem! + "</p></html>")
next 

process_events

onPageChanged:
  declare auto BBjTabSelectedEvent event!
  event! = sysgui!.getLastEvent() 
  title$ = event!.getTitle().replaceAll("<[^>]*>","").trim()

  pageHeader!.setText("<html><h1>" + title$ + " Page</h1></html>")
return

eoj:
release
